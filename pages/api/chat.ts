// Next.js API route support: https://nextjs.org/docs/api-routes/introduction
import { generateBatchedTweets } from '@components/utils';
import type { NextApiRequest, NextApiResponse } from 'next'
const { Configuration, OpenAIApi } = require("openai");

const configuration = new Configuration({
  apiKey: process.env.OPENAI_KEY,
});
const openai = new OpenAIApi(configuration);

type Data = {
  message: string[] | string
}

export default async function handler(
  req: NextApiRequest,
  res: NextApiResponse<Data>
) {
  if (req.method !== 'POST') {
    res.status(405).send({ message: 'Only POST requests allowed' })
    return
  }
  const { tweets, twitterId } = req.body
  const endPrompt = `You are now to act as if you are the one that made the tweets, in other words, you are now @${twitterId}, so you must reply as if you are them, based on the above tweets. So, generate 5 tweets @${twitterId} could potentially tweet strictly based on the above tweets. Don't include @ handles and quotes by yourself, as this will be mostly generated by the people to whom you are replying. Remember, strictly based on the above tweets.\n1.`
  const tweetBatches = generateBatchedTweets(tweets, 1800)
  let tweetBatch = tweetBatches.next();
  const openaiResponses = []
  let count = 0
  while (!tweetBatch.done) {
    const prompt = `These are a bunch of tweets from the twitter user @${twitterId}: [\n ${tweetBatch.value} \n]\n${endPrompt}`
    if (count == 2) {
      break
    }

    if (Math.random() > 0.5 || count == 0) {
      const response = await openai.createCompletion({
        model: "text-davinci-003",
        prompt: prompt,
        max_tokens: 300,
        temperature: 0.69,
      });
      openaiResponses.push(response.data)
      count++
    }
    tweetBatch = tweetBatches.next();
  }
  res.status(200).send({ message: openaiResponses })

}
